name: push-pr-build-win64
on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - name: Install graalvm
        uses: DeLaGuardo/setup-graalvm@3
        with:
          graalvm-version: '20.0.0.java11'
      - name: Install native-image
        run: |
          %JAVA_HOME%/bin/gu.cmd install native-image
        shell: cmd
      - name: Configure Pagefile
        # Increased the page-file size due to memory-consumption of native-image command
        # For details see https://github.com/actions/virtual-environments/issues/785
        uses: al-cheb/configure-pagefile-action@v1.2
      - name: Set version
        run: ./mvnw versions:set -DnewVersion="1.0.0" 
        shell: cmd
      - name: Build native executable
        # Invoke the native-image build with the necessary Visual Studio tooling/environment intialized
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86_amd64
          mvnw package -Dnative"
        shell: cmd
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: commit-${{ github.sha}}-${{ github.run_id }}
          release_name: Release commit-${{ github.sha }}-${{ github.run_id }}
          draft: false
          prerelease: false

      - name: Upload native executable
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/starfish-1.0.0-runner
          asset_name: starfish-runner-win64.exe
          asset_label: win64
          asset_content_type: application/octet-stream
